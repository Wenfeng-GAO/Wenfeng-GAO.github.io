<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubelet on Je pense donc je suis</title>
    <link>https://wenfeng-gao.github.io/tags/kubelet/</link>
    <description>Recent content in kubelet on Je pense donc je suis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Mar 2020 04:11:32 +0800</lastBuildDate>
    
	<atom:link href="https://wenfeng-gao.github.io/tags/kubelet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What Happened to Kubelet When Pod Is Deleted</title>
      <link>https://wenfeng-gao.github.io/post/source-code-kubelet-what-happened-to-kubelet-when-pod-is-deleted/</link>
      <pubDate>Thu, 26 Mar 2020 04:11:32 +0800</pubDate>
      
      <guid>https://wenfeng-gao.github.io/post/source-code-kubelet-what-happened-to-kubelet-when-pod-is-deleted/</guid>
      <description>The source code of Kubelet is quite complicated. In order to better understand it, we start by thinking about an operation we play normally: delete a pod. What will happen to Kubelet and how will it delete containers eventually? Let&amp;rsquo;s go through the code module by module while keeping these questions in mind.</description>
    </item>
    
    <item>
      <title>Why Does Kubelet Modify File Permissions</title>
      <link>https://wenfeng-gao.github.io/post/why-kubelet-modify-file-permissions/</link>
      <pubDate>Sun, 29 Sep 2019 16:06:44 +0800</pubDate>
      
      <guid>https://wenfeng-gao.github.io/post/why-kubelet-modify-file-permissions/</guid>
      <description>Recently, I found an interesting effect. I have some pods which use flexVolume, and after pods are &lt;em&gt;Running&lt;/em&gt;, I&amp;rsquo;ll put some &lt;strong&gt;readOnly&lt;/strong&gt; files in this volume directory. The intersting part is that these files will become &lt;strong&gt;writable&lt;/strong&gt; every time after kubelet being restarted.</description>
    </item>
    
    <item>
      <title>Kubernetes源码分析之VolumeManager</title>
      <link>https://wenfeng-gao.github.io/post/k8s-volume-manager-source-code-analysis/</link>
      <pubDate>Thu, 28 Feb 2019 23:07:20 +0800</pubDate>
      
      <guid>https://wenfeng-gao.github.io/post/k8s-volume-manager-source-code-analysis/</guid>
      <description>前言 VolumeManager是kubernetes负责管理pod存储相关的重要组件，理解VolumeManager是理解pod生命周期的重</description>
    </item>
    
    <item>
      <title>Kubernetes源码分析之PLEG</title>
      <link>https://wenfeng-gao.github.io/post/k8s-pleg-source-code-analysis/</link>
      <pubDate>Fri, 22 Feb 2019 10:55:09 +0800</pubDate>
      
      <guid>https://wenfeng-gao.github.io/post/k8s-pleg-source-code-analysis/</guid>
      <description>PLEG(Pod Lifecycle Event Generator)是kubelet的核心模块，理解pleg对理解kubelet的运行机制很有帮助。本文的源码分析基于v1.13.2版</description>
    </item>
    
    <item>
      <title>Kubernetes源码分析之CPU Manager</title>
      <link>https://wenfeng-gao.github.io/post/k8s_cpumanager_source_code/</link>
      <pubDate>Wed, 28 Nov 2018 23:14:35 +0800</pubDate>
      
      <guid>https://wenfeng-gao.github.io/post/k8s_cpumanager_source_code/</guid>
      <description>背景 Kubelet默认使用CFS Quota/Share的方式来实现Pod的CPU层面约束，而对于cpuset的支持，通过很长一段时间的讨论（</description>
    </item>
    
  </channel>
</rss>